################################################################################
# Jenkins – valores para clúster k3d/k3s local
################################################################################
controller:
  image:
    # Última LTS estable con JDK 17 (recomendado)
    tag: "2.440.3-jdk17"

  ###########################################################################
  # Credenciales iniciales                                                  #
  ###########################################################################
  admin:
    username: admin
    password: admin   # ➜ cámbialo en producción

  ###########################################################################
  # Plugins imprescindibles (sin fijar versión → Helm resuelve dependencias)#
  ###########################################################################
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - docker-workflow
    - blueocean
    - configuration-as-code        # por si lo activas más adelante

  ###########################################################################
  # Desactivar JCasC / auto-reload (evita el init-container problemático)   #
  ###########################################################################
  JCasC:
    enabled: false
  sidecars:
    configAutoReload:
      enabled: false

  ###########################################################################
  # Sidecar Docker-in-Docker (para docker build / push en pipelines)        #
  ###########################################################################
    dind:
      enabled: true
      image: docker:24-dind
      securityContext:
        privileged: true
      args:
        - "--host=tcp://localhost:2375"
        - "--host=unix:///var/run/docker.sock"
      env:
        - name: DOCKER_TLS_CERTDIR   # desactiva TLS dentro de DinD
          value: ""
      volumeMounts:
        - name: docker-storage
          mountPath: /var/lib/docker

  ###########################################################################
  # Init-container que copia el binario docker en /binary inside Jenkins    #
  ###########################################################################
  initContainers:
    - name: install-docker-cli
      image: docker:24-cli
      command: ["cp", "/usr/local/bin/docker", "/binary/docker"]
      volumeMounts:
        - name: docker-binary
          mountPath: /binary

  ###########################################################################
  # Volúmenes para DinD y binario docker                                    #
  ###########################################################################
  volumes:
    - name: docker-storage
      emptyDir: {}
    - name: docker-binary
      emptyDir: {}
  volumeMounts:
    - name: docker-binary
      mountPath: /binary

  ###########################################################################
  # Aseguramos que /binary está en el PATH                                  #
  ###########################################################################
  containerEnv:
    - name: PATH
      value: "/binary:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

##############################################################################
# Persistencia – PVC provisionado por local-path (default en k3d/k3s)        #
##############################################################################
persistence:
  enabled: true
  storageClass: local-path   # cámbialo a longhorn, nfs-client-provisioner, etc.
  size: 8Gi
  existingClaim: ""          # deja vacío para que Helm cree el PVC

##############################################################################
# Exposición – NodePort (fijo 32000)                                         #
##############################################################################
service:
  type: NodePort
  nodePort: 32000