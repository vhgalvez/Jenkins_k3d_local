# jenkins-values.yaml  â€“  listo para k3d/k3s laboratorio
controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"

  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  containerEnv:
    - name: DOCKERHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: dockerhub-credentials
          key: username
    - name: DOCKERHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: dockerhub-credentials
          key: password
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-ci-token
          key: token

  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "Bienvenido a Jenkins en Kubernetes ðŸ˜Ž"
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
                - id: "admin"
                  password: "admin"
          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default"
                skipTlsVerify: true
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins-local-k3d:8080"
                jenkinsTunnel: "jenkins-local-k3d-agent:50000"
                containerCap: 10
                connectTimeout: 5
                readTimeout: 15
                templates:
                  - name: "jenkins-agent"
                    label: "jenkins-agent"
                    nodeUsageMode: NORMAL
                    idleMinutes: 1
                    volumes:
                      # CORREGIDO: Sintaxis correcta para volumen de tipo 'secret' en JCasC
                      - secretVolume:
                          mountPath: "/kaniko/.docker"
                          secretName: dockerhub-credentials
                    containers:
                      - name: jnlp
                        image: jenkins/inbound-agent:3107.v665000b_51092-10
                        # CORREGIDO: 'args' debe ser una cadena escalar para el plugin de Kubernetes de Jenkins
                        args: '$(JENKINS_SECRET) $(JENKINS_NAME)'
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "128Mi"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"

                      - name: nodejs
                        image: node:18-alpine
                        # CORREGIDO: 'command' debe ser una cadena escalar para el plugin de Kubernetes de Jenkins
                        command: "cat" # Mantiene el contenedor vivo
                        ttyEnabled: true
                        envVars:
                          - key: NODE_ENV
                            value: production
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "256Mi"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"

                      - name: kaniko
                        image: gcr.io/kaniko-project/executor:v1.23.0-debug
                        # CORREGIDO: 'command' y 'args' deben ser cadenas escalares para el plugin de Kubernetes de Jenkins
                        command: "/kaniko/executor"
                        args: "--help"
                        ttyEnabled: true
                        envVars:
                          - key: DOCKER_CONFIG
                            value: /kaniko/.docker/
                        volumeMounts:
                          # El 'mountPath' debe coincidir con el 'mountPath' definido en el volumen
                          - name: docker-config # Este 'name' no se usa si el volumen es 'secretVolume', pero es buena prÃ¡ctica mantenerlo si se usara el formato 'name: ... secret: ...'
                            mountPath: "/kaniko/.docker"
                        resourceRequestCpu: "250m"
                        resourceRequestMemory: "512Mi"
                        resourceLimitCpu: "1"
                        resourceLimitMemory: "1536Mi"

        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: dockerhub-credentials
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                      description: "DockerHub Access Token for CI/CD"
                  - string:
                      scope: GLOBAL
                      id: github-ci-token
                      secret: "${GITHUB_TOKEN}"
                      description: "GitHub PAT para GitOps"

        unclassified:
          location:
            adminAddress: "admin@jenkins.local"
            url: "http://jenkins.local"

  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - docker-workflow
    - configuration-as-code
    - credentials
    - plain-credentials
    - credentials-binding
    - ssh-credentials
    - github-oauth
    - role-strategy

  sidecars:
    configAutoReload:
      enabled: false

persistence:
  enabled: true
  storageClass: local-path
  size: 8Gi
