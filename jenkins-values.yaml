controller:
  image:
    tag: "lts"              # jenkins/jenkins:lts

  ## Credenciales iniciales
  admin:
    username: admin
    password: admin

  ## Plugins imprescindibles
  installPlugins:
    - docker-workflow:1.28
    - workflow-aggregator:2.7
    - git:4.11.0
    - credentials:1144.v76b_089ccd026
    - credentials-binding:1.27
    - blueocean:1.25.0

  ## ─── Desactivar JCasC para evitar init-container que falla ─────────────
  JCasC:
    enabled: false

  ## ─── Sidecars ─────────────────────────────────────────────────────────
  sidecars:
    # Desactiva el auto-reload que acompañaba a JCasC
    configAutoReload:
      enabled: false

    # DinD para poder hacer docker build / push en los pipelines
    dind:
      image: docker:24-dind
      securityContext:
        privileged: true
      args:
        - --host=tcp://localhost:2375
        - --host=unix:///var/run/docker.sock
      env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
      volumeMounts:
        - name: docker-graph-storage
          mountPath: /var/lib/docker

  ## ─── Volúmenes y mounts ───────────────────────────────────────────────
  volumes:
    - name: docker-graph-storage
      emptyDir: {}
    - name: docker-binary
      emptyDir: {}

  volumeMounts:
    - name: docker-binary          # expone /binary dentro del contenedor Jenkins
      mountPath: /binary

  ## ─── Init-container: copia el binario docker ──────────────────────────
  initContainers:
    - name: install-docker-cli
      image: docker:24-cli          # trae /usr/local/bin/docker ya listo
      command: ["cp", "/usr/local/bin/docker", "/binary/docker"]
      volumeMounts:
        - name: docker-binary
          mountPath: /binary

  ## Añadir /binary al PATH
  containerEnv:
    - name: PATH
      value: "/binary:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

## ─── Persistencia local (funciona en k3d/k3s sin extras) ─────────────────
persistence:
  enabled: true
  storageClass: local-path
  size: 4Gi