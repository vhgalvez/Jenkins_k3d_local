# jenkins-values.yaml
controller:
  image:
    repository: jenkins/jenkins
    tag: "2.504.3-jdk17"
    pullPolicy: IfNotPresent

  # ----------------------------------------
  # Credenciales de administrador (via Secret)
  # ----------------------------------------
  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  # ----------------------------------------
  # Variables de entorno que toma de Secrets
  # ----------------------------------------
  containerEnv:
    - name: JENKINS_ADMIN_USER
      valueFrom:
        secretKeyRef:
          name: jenkins-admin
          key: jenkins-admin-user
    - name: JENKINS_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: jenkins-admin
          key: jenkins-admin-password
    - name: DOCKERHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: dockerhub-credentials
          key: username
    - name: DOCKERHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: dockerhub-credentials
          key: password

  # ----------------------------------------
  # Plugins necesarios
  # ----------------------------------------
  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - docker-workflow # pasos docker build/push
    - docker-commons # librería de credenciales Docker
    - blueocean
    - credentials
    - credentials-binding
    - configuration-as-code

  # ----------------------------------------
  # Jenkins Configuration as Code (JCasC)
  # ----------------------------------------
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          securityRealm:
            local:
              allowsSignup: false
              users:
                - id: "${JENKINS_ADMIN_USER}"
                  password: "${JENKINS_ADMIN_PASSWORD}"

          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          # ---- Credenciales Docker Hub ----
          credentials:
            system:
              domainCredentials:
                - credentials:
                    - usernamePassword:
                        id: "dockerhub-credentials"
                        username: "${DOCKERHUB_USERNAME}"
                        password: "${DOCKERHUB_TOKEN}"
                        description: "DockerHub Access Token for CI/CD"

          # ---- Cloud Kubernetes para los agentes ----
          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default"
                skipTlsVerify: true
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins-local-k3d:8080"
                jenkinsTunnel: "jenkins-local-k3d-agent:50000"
                containerCap: 10
                connectTimeout: 5
                readTimeout: 15
                templates:
                  - name: "default"
                    label: "jenkins-agent"
                    nodeUsageMode: "NORMAL"
                    idleMinutes: 1
                    containers:
                      - name: jnlp
                        image: "jenkins/inbound-agent:alpine"
                        args: "${computer.jnlpmac} ${computer.name}"
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "128Mi"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"

  # ----------------------------------------
  # Otros ajustes del chart
  # ----------------------------------------
  sidecars:
    configAutoReload:
      enabled: true

  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

  podAnnotations: {}

  volumes:
    - name: docker-storage
      emptyDir: {}
    - name: docker-bin
      emptyDir: {}

  volumeMounts:
    - name: docker-bin
      mountPath: /usr/local/bin

# --------------------------------------------------------------------
# Configuración del agente por defecto que lanza el Cloud de Kubernetes
# --------------------------------------------------------------------
agent:
  podName: "jenkins-agent"
  customJenkinsLabels:
    - jenkins-agent
  nodeUsageMode: NORMAL
  containers:
    - name: jnlp
      image: "jenkins/inbound-agent:alpine"
      ttyEnabled: true
  connectTimeout: 100
  runAsUser: 1000

# -------------------
# Almacenamiento local
# -------------------
persistence:
  enabled: true
  storageClass: local-path
  size: 8Gi

# -------------
# Servicio K3d
# -------------
service:
  type: ClusterIP
  agentListenerPort: 50000
