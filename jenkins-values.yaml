# jenkins-values.yaml
controller:
  image:
    repository: jenkins/jenkins
    tag: "2.518-jdk21"
    pullPolicy: IfNotPresent

  admin:
    existingSecret: jenkins-admin
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  containerEnv:
    - name: DOCKERHUB_USERNAME
      valueFrom:
        secretKeyRef: { name: dockerhub-credentials, key: username }
    - name: DOCKERHUB_TOKEN
      valueFrom:
        secretKeyRef: { name: dockerhub-credentials, key: password }
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef: { name: github-ci-token, key: token }

  # ─── Jenkins Configuration as Code ─────────────────────
  JCasC:
    enabled: true
    defaultConfig: false
    configScripts:
      main: |
        jenkins:
          systemMessage: "Bienvenido a Jenkins"
          securityRealm:
            local:
              allowsSignup: false
              enableCaptcha: false
              users:
                - id: "${JENKINS_ADMIN_USER}"
                  password: "${JENKINS_ADMIN_PASSWORD_HASH}"

          authorizationStrategy:
            loggedInUsersCanDoAnything:
              allowAnonymousRead: false

          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default"
                skipTlsVerify: true
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins-jenkins:8080"
                jenkinsTunnel: "jenkins-jenkins-agent:50000"
                containerCap: 10
                templates:
                  - name: "default"
                    label: "jenkins-agent"
                    nodeUsageMode: NORMAL
                    idleMinutes: 1
                    containers:
                      - name: jnlp
                        image: "jenkins/inbound-agent:3107.v665000b_51092-10"
                        args: ["--agent", "jnlp", "--workDir=/home/jenkins/agent"]
                        ttyEnabled: true
                        resourceRequestCpu: "100m"
                        resourceRequestMemory: "128Mi"
                        resourceLimitCpu: "500m"
                        resourceLimitMemory: "512Mi"
                      - name: nodejs
                        image: "node:18"
                        command: ["cat"]
                        ttyEnabled: true
                      - name: kaniko
                        image: "gcr.io/kaniko-project/executor:latest"
                        args: ["--help"]
                        ttyEnabled: true

        unclassified:
          location:
            url: "http://jenkins.local"
            adminAddress: "admin@jenkins.local"

        # ── CREDENCIALES (forma mínima y correcta) ─────────
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: "dockerhub-credentials"
                      username: "${DOCKERHUB_USERNAME}"
                      password: "${DOCKERHUB_TOKEN}"
                  - secretText:
                      scope: GLOBAL
                      id: "github-ci-token"
                      secret: "${GITHUB_TOKEN}"

  sidecars:
    configAutoReload:
      enabled: true

  installPlugins:
    - kubernetes
    - workflow-aggregator
    - git
    - docker-workflow
    - configuration-as-code
    - credentials
    - plain-credentials
    - credentials-binding
    - ssh-credentials
    - role-strategy
    - github-oauth
    # - blueocean   # ← Mantener comentado mientras no necesites el UI de BlueOcean

# ─── Plantilla por defecto de los agentes ───────────────
agent:
  podName: "jenkins-agent"
  customJenkinsLabels: ["jenkins-agent"]
  nodeUsageMode: NORMAL
  containers:
    - name: jnlp
      image: "jenkins/inbound-agent:3107.v665000b_51092-10"
      args: ["--agent", "jnlp", "--workDir=/home/jenkins/agent"]
      ttyEnabled: true
    - name: nodejs
      image: "node:18"
      command: ["cat"]
      ttyEnabled: true
    - name: kaniko
      image: "gcr.io/kaniko-project/executor:latest"
      args: ["--help"]
      ttyEnabled: true
  runAsUser: 1000
  connectTimeout: 100

# ─── Almacenamiento persistente ─────────────────────────
persistence:
  enabled: true
  storageClass: local-path
  size: 8Gi
